/* Minimized Elementor Popup Handlers */
(function() {
  'use strict';
  
  // Popup functionality
  function setupPopups() {
    console.log('Popup handlers initialized');
    
    // Get all popup triggers
    const popupTriggers = document.querySelectorAll('[data-elementor-open-popup]');
    
    popupTriggers.forEach(trigger => {
      trigger.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Extract popup ID or other attributes if needed
        const popupId = this.getAttribute('data-elementor-open-popup');
        if (popupId) {
          openPopup(popupId);
        }
      });
    });
  }
  
  function openPopup(popupId) {
    // Simple popup implementation
    const popup = document.getElementById(popupId);
    if (popup) {
      popup.style.display = 'flex';
      
      // Add close functionality
      const closeButtons = popup.querySelectorAll('.elementor-popup-close-button');
      closeButtons.forEach(button => {
        button.addEventListener('click', function() {
          popup.style.display = 'none';
        });
      });
    }
  }
  
  // Initialize popup handlers when DOM is ready
  document.addEventListener('DOMContentLoaded', function() {
    setupPopups();
  });
})();